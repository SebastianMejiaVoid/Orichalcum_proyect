Linux 
    sudo mongod
    mongo 

show dbs # mostrar todas las bases de datos

db.createUser({ user: 'rob', pwd: '123', roles: ['readWrite', 'dbAdmin'] }) # crear usuario
db.createCollection('proyectos') # crear collection
show collections # ver colections dentro de  nuestra base de datos
db.proyectos.insert({ nombreProyecto: 'Proyecto 1', description: 'proyecto de prueba 1' }) # Insertar registro-Doc
db.proyectos.find().pretty() # busqueda bonita u ordenda como Json
db.proyectos.insert([{nombreProyecto: 'Proyecto 2', description: 'proyecto de prueba 2'},{nombreProyecto: 'proyecto 3', description: 'Proyecto de prueba 3'},{nombreProyecto: 'proyecto 4', description: 'proyecto de prueba 4'}]) #insert de multiples documentos
db.proyectos.find() # realizar busquedad visualmente no bonita
db.proyectos.find({nombreProyecto: 'Proyecto 2'}) # buscar con where o condicional
db.proyectos.find({nombreProyecto: 'Proyecto 2'},{nombreProyecto: true}) # traer proyecto
db.proyectos.update({nombreProyecto: 'Proyecto 2'}, {nombreProyecto: 'Proyecto 2.1', description: 'Descripcion despues de actualizar'}) # actualizar un registro, la primera parte es el query o filtro y la segunda parte es la nueva informaci√≥n.
db.proyectos.update({nombreProyecto: 'Proyecto 2.1'}, { $set: {description: 'Nueva descripcion'}}) # actualizar con query, pero solo un campo especifico, no se actualiza el documento completo.
db.proyectos.remove({nombreProyecto: 'Proyecto 2.1'}) # eliminar recibe un query, que nos permite hacer la busquedad del documento que se va a aliminar
db.proyectos.remove({nombreProyecto: 'Proyecto 3'}, {justOne: true}) # remover solo uno cuando hay varios documentos con el mismo query o filtro
db.proyectos.find().sort({ nombreProyecto: 1 }) #consulta con datos ordenados ascendente
db.proyectos.find().sort({ nombreProyecto: -1 }) #consulta con datos ordenados descendente
db.proyectos.find().count() # contar numero de registro
db.proyectos.find({nombreProyecto: 'proyecto 3'}).count() #contar numero de registros con mismo query o filtro
db.proyectos.find().limit(1) # filtro con limite
db.proyectos.find().sort({nombreProyecto: -1}).limit(1) # filtro con ordenamiento
db.proyectos.find().forEach(function(doc) { print("nombre de el proyecto" + doc.nombreProyecto); }) # busquedad que nos permite dar una salidad de una manera un poco mas bonita visualmente
